{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.parse = parse;\nexports.build = build;\n\nvar _xlsx = require('xlsx');\n\nvar _xlsx2 = _interopRequireDefault(_xlsx);\n\nvar _bufferFrom = require('buffer-from');\n\nvar _bufferFrom2 = _interopRequireDefault(_bufferFrom);\n\nvar _helpers = require('./helpers');\n\nvar _workbook = require('./workbook');\n\nvar _workbook2 = _interopRequireDefault(_workbook);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction parse(mixed) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var workSheet = _xlsx2.default[(0, _helpers.isString)(mixed) ? 'readFile' : 'read'](mixed, options);\n\n  return Object.keys(workSheet.Sheets).map(function (name) {\n    var sheet = workSheet.Sheets[name];\n    return {\n      name: name,\n      data: _xlsx2.default.utils.sheet_to_json(sheet, {\n        header: 1,\n        raw: options.raw !== false\n      })\n    };\n  });\n}\n\nfunction build(worksheets) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaults = {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  };\n  var workBook = new _workbook2.default();\n  worksheets.forEach(function (worksheet) {\n    var sheetName = worksheet.name || 'Sheet';\n    var sheetOptions = worksheet.options || {};\n    var sheetData = (0, _helpers.buildSheetFromMatrix)(worksheet.data || [], _extends({}, options, sheetOptions));\n    workBook.SheetNames.push(sheetName);\n    workBook.Sheets[sheetName] = sheetData;\n  });\n\n  var excelData = _xlsx2.default.write(workBook, Object.assign({}, defaults, options));\n\n  return excelData instanceof Buffer ? excelData : (0, _bufferFrom2.default)(excelData, 'binary');\n}\n\nexports.default = {\n  parse: parse,\n  build: build\n};","map":{"version":3,"sources":["../src/index.js"],"names":["parse","options","workSheet","XLSX","sheet","name","data","header","raw","build","defaults","bookType","bookSST","type","workBook","Workbook","worksheets","sheetName","worksheet","sheetOptions","sheetData","excelData","Object"],"mappings":";;;;;;;;;;;;;;;;;;;;QAMgBA,K,GAAAA,K;QAQAS,K,GAAAA,K;;AAbhB,IAAA,KAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;;;;;;;AAEO,SAAA,KAAA,CAAA,KAAA,EAAoC;AAAA,MAAdR,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AACzC,MAAMC,SAAAA,GAAYC,MAAAA,CAAAA,OAAAA,CAAK,CAAA,GAAA,QAAA,CAAA,QAAA,EAAA,KAAA,IAAA,UAAA,GAALA,MAAAA,EAAAA,KAAAA,EAAlB,OAAkBA,CAAlB;;AACA,SAAO,MAAA,CAAA,IAAA,CAAYD,SAAAA,CAAZ,MAAA,EAAA,GAAA,CAAkC,UAAA,IAAA,EAAU;AACjD,QAAME,KAAAA,GAAQF,SAAAA,CAAAA,MAAAA,CAAd,IAAcA,CAAd;AACA,WAAO;AAACG,MAAAA,IAAAA,EAAD,IAAA;AAAOC,MAAAA,IAAAA,EAAMH,MAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAgC;AAACI,QAAAA,MAAAA,EAAD,CAAA;AAAYC,QAAAA,GAAAA,EAAKP,OAAAA,CAAAA,GAAAA,KAArE;AAAoD,OAAhCE;AAAb,KAAP;AAFF,GAAO,CAAP;AAID;;AAEM,SAAA,KAAA,CAAA,UAAA,EAAyC;AAAA,MAAdF,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAC9C,MAAMS,QAAAA,GAAW;AACfC,IAAAA,QAAAA,EADe,MAAA;AAEfC,IAAAA,OAAAA,EAFe,KAAA;AAGfC,IAAAA,IAAAA,EAAM;AAHS,GAAjB;AAKA,MAAMC,QAAAA,GAAW,IAAIC,UAAAA,CAArB,OAAiB,EAAjB;AACAC,EAAAA,UAAAA,CAAAA,OAAAA,CAAmB,UAAA,SAAA,EAAe;AAChC,QAAMC,SAAAA,GAAYC,SAAAA,CAAAA,IAAAA,IAAlB,OAAA;AACA,QAAMC,YAAAA,GAAeD,SAAAA,CAAAA,OAAAA,IAArB,EAAA;AACA,QAAME,SAAAA,GAAY,CAAA,GAAA,QAAA,CAAA,oBAAA,EAAqBF,SAAAA,CAAAA,IAAAA,IAArB,EAAA,EAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAlB,YAAkB,CAAA,CAAlB;AACAJ,IAAAA,QAAAA,CAAAA,UAAAA,CAAAA,IAAAA,CAAAA,SAAAA;AACAA,IAAAA,QAAAA,CAAAA,MAAAA,CAAAA,SAAAA,IAAAA,SAAAA;AALFE,GAAAA;;AAOA,MAAMK,SAAAA,GAAYlB,MAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAAqBmB,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAvC,OAAuCA,CAArBnB,CAAlB;;AACA,SAAOkB,SAAAA,YAAAA,MAAAA,GAAAA,SAAAA,GAA0C,CAAA,GAAA,YAAA,CAAA,OAAA,EAAA,SAAA,EAAjD,QAAiD,CAAjD;AACD;;kBAEc;AAACrB,EAAAA,KAAAA,EAAD,KAAA;AAAQS,EAAAA,KAAAA,EAAR;AAAA,C","sourcesContent":["\nimport XLSX from 'xlsx';\nimport bufferFrom from 'buffer-from';\nimport {buildSheetFromMatrix, isString} from './helpers';\nimport Workbook from './workbook';\n\nexport function parse(mixed, options = {}) {\n  const workSheet = XLSX[isString(mixed) ? 'readFile' : 'read'](mixed, options);\n  return Object.keys(workSheet.Sheets).map((name) => {\n    const sheet = workSheet.Sheets[name];\n    return {name, data: XLSX.utils.sheet_to_json(sheet, {header: 1, raw: options.raw !== false})};\n  });\n}\n\nexport function build(worksheets, options = {}) {\n  const defaults = {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  };\n  const workBook = new Workbook();\n  worksheets.forEach((worksheet) => {\n    const sheetName = worksheet.name || 'Sheet';\n    const sheetOptions = worksheet.options || {};\n    const sheetData = buildSheetFromMatrix(worksheet.data || [], {...options, ...sheetOptions});\n    workBook.SheetNames.push(sheetName);\n    workBook.Sheets[sheetName] = sheetData;\n  });\n  const excelData = XLSX.write(workBook, Object.assign({}, defaults, options));\n  return excelData instanceof Buffer ? excelData : bufferFrom(excelData, 'binary');\n}\n\nexport default {parse, build};\n"]},"metadata":{},"sourceType":"script"}